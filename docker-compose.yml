services:
  control-panel-app:
    build:
      context: .
      dockerfile: Dockerfile.dev  # Use development Dockerfile
    restart: always
    env_file:
      - .env
    ports:
      - "8080:80"
    volumes:
      - .:/app                # Mount current directory
      - ./tmp:/app/tmp        # For air's temp files
      - go-mod-cache:/go/pkg
    working_dir: /app
    depends_on:
      - mongodb
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    container_name: mongodb_container
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: echo 'db.runCommand({ping:1})' | mongosh --quiet mongodb:27017/test --eval "db.runCommand({ping:1})"
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - app-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    command: mongod --bind_ip_all # Ensures MongoDB is accessible


  app:
    build: .
    container_name: my_app
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy  # Ensures MongoDB is ready before starting
    environment:
      MONGO_URI: "mongodb://admin:password@mongodb:27017/flowCx?authSource=admin"
    networks:
      - app-network


volumes:
  mongodb_data:
  go-mod-cache:


networks:
  app-network:

#volumes:
#  mongodb_data:
#    driver: "cloud-storage-driver"  # e.g., azure_file, gcepd
#    driver_opts:
#      share: "your-storage-name"
#      creds: "secret-credentials"